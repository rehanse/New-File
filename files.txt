 it('should call openDialog when openPopupOnCellClick is called', () => {
    spyOn(component, 'openDialog');
    const event = new MouseEvent('click');
    component.openPopupOnCellClick(event, {}, 'column');
    expect(component.openDialog).toHaveBeenCalled();
  });

error:-Argument of type '"openDialog"' is not assignable to parameter of type 'never'.

Property 'openDialog' is private and only accessible within class 'GeneralPropertyComponent'.ts(2341)
(method) GeneralPropertyComponent.openDialog(request: GridRowRecord, element?: any, popUpTitle?: string): void

it('should disable PropertyDamageIndexAdjusted if PropertyDamageIndexCalculated is zero', () => {
    component.generalPropertyForm = new FormBuilder().group({
      PropertyDamageIndexCalculated: new FormGroup({ value: 0 }),
      PropertyDamageIndexAdjusted: new FormGroup({ value: '', disabled: true })
    });
    component.disablePDIndexAdjustByBasedOnPDIndexValue();
    expect(component.generalPropertyForm.get('PropertyDamageIndexAdjusted')?.disabled).toBeTrue();
  });

Type 'number' is not assignable to type 'AbstractControl<any, any>'.ts(2322)
general-property.component.spec.ts(93, 54): The expected type comes from property 'value' which is declared here on type '{ value: AbstractControl<any, any>; }'
(property) value: AbstractControl<any, any>

Type 'boolean' is not assignable to type 'AbstractControl<any, any>'.ts(2322)
general-property.component.spec.ts(94, 63): The expected type comes from property 'disabled' which is declared here on type '{ value: AbstractControl<any, any>; disabled: AbstractControl<any, any>; }'

Property 'disablePDIndexAdjustByBasedOnPDIndexValue' is private and only accessible within class 'GeneralPropertyComponent'.ts(2341)
(method) GeneralPropertyComponent.disablePDIndexAdjustByBasedOnPDIndexValue(): void
No quick fixes available


