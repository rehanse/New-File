it('should process excel data and merge records when matching record is found', () => {
    // Arrange: Sample data
    const jsonData = [{ 
        locationName: 'USA', 
        locationAddress: '1 Park Avenue', 
        city: 'New York', 
        state: 'New York', 
        country: 'United States',
        ULId: null
    }];
    
    const propertyValueData = [{ 
        locationName: 'USA', 
        locationAddress: '1 Park Avenue', 
        city: 'New York', 
        state: 'New York', 
        country: 'United States',
        ULId: '12345'
    }];

    // ✅ Spy and return the expected key
    spyOn(component, 'findMatchingRecordKey').and.returnValue('existingKey');
    spyOn(component, 'mergeValues').and.callThrough();

    // Act
    component.processExcelData(jsonData, propertyValueData);

    // ✅ Ensure `findMatchingRecordKey` was called with the correct parameters
    expect(component.findMatchingRecordKey).toHaveBeenCalledWith(
        jasmine.any(Object),  // mergedRecords
        'USA',               // locationName
        'United States'      // country
    );

    // ✅ Ensure `mergeValues` was called
    expect(component.mergeValues).toHaveBeenCalledWith(
        jasmine.any(Object), // mergedRecords
        'existingKey',       // Matching record key
        jasmine.any(Object)  // New property value
    );
});
