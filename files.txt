Got it üëç
You want to replace Angular Material‚Äôs mat-menu with ngx-bootstrap popover, but still keep the same behavior:

Parent ‚Üí child component interaction (via @Input / @Output)

A textbox with Angular Mention inside popover

Two buttons: Cancel & OK

The popover opens when you click an icon (fx), and it should close when Cancel/Ok clicked


Here‚Äôs a step-by-step process with working sample code for ngx-bootstrap v12.0:


---

1. Install dependencies

If not already installed:

npm install ngx-bootstrap --save
npm install angular-mentions --save


---

2. Import Modules

In your app.module.ts (or shared module):

import { PopoverModule } from 'ngx-bootstrap/popover';
import { MentionModule } from 'angular-mentions';

@NgModule({
  imports: [
    PopoverModule.forRoot(),
    MentionModule,
    // other modules...
  ],
})
export class AppModule {}


---

3. Create Child Component (Popover Content)

Let‚Äôs say this is your popover form component:

popover-form.component.ts

import { Component, EventEmitter, Input, Output } from '@angular/core';

@Component({
  selector: 'app-popover-form',
  templateUrl: './popover-form.component.html'
})
export class PopoverFormComponent {
  @Input() initialValue: string = '';
  @Output() save = new EventEmitter<string>();
  @Output() cancel = new EventEmitter<void>();

  textValue: string = '';

  ngOnInit() {
    this.textValue = this.initialValue;
  }

  onSave() {
    this.save.emit(this.textValue);
  }

  onCancel() {
    this.cancel.emit();
  }
}

popover-form.component.html

<div class="p-2" style="width: 250px;">
  <input type="text"
         class="form-control mb-2"
         [(ngModel)]="textValue"
         [mention]="['John', 'Jane', 'Jack']"
         placeholder="Type @ to mention" />

  <div class="d-flex justify-content-end">
    <button class="btn btn-sm btn-secondary me-2" (click)="onCancel()">Cancel</button>
    <button class="btn btn-sm btn-primary" (click)="onSave()">OK</button>
  </div>
</div>


---

4. Parent Component (With Popover)

Replace your mat-menu trigger with ngx-bootstrap popover:

parent.component.html

<button type="button"
        class="btn btn-outline-primary"
        [popover]="popoverTemplate"
        popoverTitle="Mention Box"
        triggers="click"
        container="body"
        placement="bottom"
        #p="bs-popover">
  fx
</button>

<ng-template #popoverTemplate>
  <app-popover-form
    [initialValue]="value"
    (save)="onSave($event); p.hide()"
    (cancel)="onCancel(); p.hide()">
  </app-popover-form>
</ng-template>


---

5. Parent Component Logic

parent.component.ts

import { Component } from '@angular/core';

@Component({
  selector: 'app-parent',
  templateUrl: './parent.component.html'
})
export class ParentComponent {
  value: string = '';

  onSave(newVal: string) {
    this.value = newVal;
    console.log('Saved value:', newVal);
  }

  onCancel() {
    console.log('Cancelled');
  }
}


---

‚úÖ Key Notes:

popoverTemplate holds the child component.

triggers="click" makes the popover open/close on click.

p.hide() closes the popover programmatically on OK or Cancel.

container="body" avoids positioning issues (important inside tables/dialogs).

You can fully reuse your Angular Mention setup inside popover-form.component.



---

üëâ Would you like me to also show you how to handle the "only one popover open at a time" case (like mat-menu auto-closes others)?

IRONSUITE.REHANJBIET.GMAIL.COM.4530-E46BF95329-BRYXO34TED37TREY-NHMULSNCPZZU-WGZOJAFONWJA-F4NDCCQ7I7BM-UCA63FMXS3SZ-HJXFSMJDCO5A-BC3JVJ-TNYTFINZIOGQEA-DEPLOYMENT.TRIAL-LAA3L5.TRIAL.EXPIRES.05.OCT.2025
