<button mat-icon-button [matMenuTriggerFor]="fxMenu" #trigger="matMenuTrigger">
  fx
</button>

<mat-menu 
  #fxMenu="matMenu" 
  class="fx-popover-menu"
  yPosition="below" 
  xPosition="after"
  [overlapTrigger]="false"
  [hasBackdrop]="false"   <!-- ðŸš« No backdrop, so outside clicks wonâ€™t close -->
  [disableClose]="true">  <!-- ðŸš« Strict: menu wonâ€™t auto-close -->

  <div class="fx-container" (click)="$event.stopPropagation()">
    <mat-form-field appearance="outline" class="fx-input">
      <input matInput [(ngModel)]="formula" placeholder="Enter formula">
    </mat-form-field>

    <div class="fx-actions">
      <button mat-button color="primary" (click)="onOk()">OK</button>
      <button mat-button (click)="onCancel()">Cancel</button>
    </div>
  </div>
</mat-menu>
import { Component, Input, Output, EventEmitter, ViewChild } from '@angular/core';
import { MatMenuTrigger } from '@angular/material/menu';

@Component({
  selector: 'app-fx-popover',
  templateUrl: './fx-popover.component.html',
  styleUrls: ['./fx-popover.component.scss']
})
export class FxPopoverComponent {
  @Input() rowIndex!: number;
  @Input() colKey!: string;
  @Input() value!: any;
  @Output() formulaApplied = new EventEmitter<{ rowIndex: number, col: string, formula: string }>();

  @ViewChild(MatMenuTrigger) menuTrigger!: MatMenuTrigger;

  formula = '';

  onOk() {
    this.formulaApplied.emit({ rowIndex: this.rowIndex, col: this.colKey, formula: this.formula });
    this.menuTrigger.closeMenu(); // âœ… Close only here
    this.formula = '';
  }

  onCancel() {
    this.menuTrigger.closeMenu(); // âœ… Close only here
    this.formula = '';
  }
}
