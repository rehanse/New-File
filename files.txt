it('should open human element popup on human element cell click and update human element calculated value in human element column', () => {
    // âœ… Mock popup response with correct structure
    const popupResponse = {
        data: {
            humanElementCalculated: 3,
            humanElementUpdated: 0.0
        }
    };

    // âœ… Ensure event.target.id follows the correct format
    const mockPopupColumnEvent = {
        column: { field: 'HumanElementDisplayValue' },
        rowIndex: 0,
        event: {
            target: {
                id: 'row-0_dataKey-143_HumanElementDisplayValue_HumanElementRiskFactorCalculatorComponent'
            }
        }
    };

    // âœ… Ensure mock cell data is structured correctly
    const mockCellData = {
        value: {
            HumanElementCalculated: 0.0,
            HumanElementUpdated: 0.0,
            HumanElementUpdatedComment: ''
        }
    };

    // âœ… Spy on dialog open method and return mock response
    dialogSpy.open.and.returnValue({
        afterClosed: () => of(popupResponse)
    } as any);

    // âœ… Ensure form array is properly initialized with the expected form control
    const formArray = component['getFormArray']();
    formArray.push(new FormGroup({
        HumanElementDisplayValue: new FormControl(0.0)
    }));

    // âœ… Call the method
    component.openPopupOnCellClick(mockPopupColumnEvent.event as any, mockCellData, 'HumanElementDisplayValue');

    // âœ… Verify that the dialog opens
    expect(dialogSpy.open).toHaveBeenCalled();

    // âœ… Validate dialog configuration
    const dialogConfig: MatDialogConfig<any> = dialogSpy.open.calls.mostRecent().args[1];
    expect(dialogConfig.data.title).toBe('Property/Human Element Risk Factor Calculator');
    expect(dialogConfig.data.data.humanElementCalculated).toBe(0);

    // âœ… Ensure form array exists and has at least one row
    expect(formArray.length).toBeGreaterThan(0);

    // âœ… Get the first row and check if HumanElementDisplayValue was updated
    const row = formArray.at(0) as FormGroup;
    expect(row.get('HumanElementDisplayValue')?.value).toBe(3.0); // ðŸ”¥ Fix: Ensure value is properly updated
});
