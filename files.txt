it('should process excel data and merge records when matching record is found', () => {
    // Arrange: Sample input data
    const jsonData = [{ 
        locationName: 'USA', 
        locationAddress: '1 Park Avenue', 
        city: 'New York', 
        state: 'New York', 
        country: 'United States',
        ULId: null
    }];
    
    const propertyValueData = [{
        ULId: '12345',
        PropertyLocationId: '1',
        LocationName: 'USA',
        Address: '1 Park Avenue',
        City: 'New York',
        StateProvince: 'New York',
        Country: 'United States',
        BuildingValue: 5000
    }];

    // ✅ Bypass private method using `any`
    spyOn<any>(component, 'findMatchingRecordKey').and.returnValue('existingKey');

    // ✅ Mock `mapRowToPropertyValueExcelFile` with ALL required properties
    spyOn(MapperUtil, 'mapRowToPropertyValueExcelFile').and.returnValue({
        ULId: '12345',
        PropertyLocationId: '1',
        LocationName: 'USA',
        Address: '1 Park Avenue',
        City: 'New York',
        StateProvince: 'New York',
        Country: 'United States',
        BuildingValue: 5000,
        EquipmentValue: 1000,
        InventoryValue: 2000,
        OtherValue: 300,
        TotalPD: 0,
        BusinessInterruptionValue: 4000,
        BusinessInterruptionOtherValue: 500,
        IndemnityPeriod: '12',
        PayRollValue: 6000,
        PayRollDayValue: 200,
        TotalTE: 0,
        Total: 0,
        CurrencyId: 1,
        UnitId: 1,
        Action: ActionEnum.IsNewRecord,
        VerCol: '',
        LocationAddressMapId: null,
        StreetAddresses: [],
        CityNames: [],
        StateProvinces: [],
        LocationAddressMapIds: []
    });

    // ✅ Bypass private method using `any`
    spyOn<any>(component, 'mergeValues').and.callThrough();

    // Act
    component.processExcelData(jsonData, propertyValueData);

    // Assert: Ensure `findMatchingRecordKey` was called
    expect(component['findMatchingRecordKey']).toHaveBeenCalledWith(
        jasmine.any(Object),
        'USA',
        'United States'
    );

    // Assert: Ensure `mergeValues` was called with a valid `propertyValue`
    expect(component['mergeValues']).toHaveBeenCalledWith(
        jasmine.any(Object), // mergedRecords
        'existingKey',       // Matching record key
        jasmine.objectContaining({ BuildingValue: 5000 })  // Ensuring valid property value
    );
});
