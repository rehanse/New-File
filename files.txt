Perfect üëç let‚Äôs make it smart so the popover auto-adjusts:

If the cell is on the right side (last columns), popover will open to the left with arrow pointing right.

If the cell is on the left side (first columns), popover will open to the right with arrow pointing left.



---

üîß Updated Code

fx-popover.component.ts

import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';

@Component({
  selector: 'app-fx-popover',
  templateUrl: './fx-popover.component.html',
  styleUrls: ['./fx-popover.component.scss']
})
export class FxPopoverComponent {
  @Input() rowIndex!: number;
  @Input() colKey!: string;
  @Input() value!: any;
  @Output() formulaApplied = new EventEmitter<{ rowIndex: number, col: string, formula: string }>();

  formula = '';
  isOpen = false;
  positionTop = 0;
  positionLeft = 0;
  arrowDirection: 'left' | 'right' = 'right'; // default

  togglePopover(event: MouseEvent) {
    this.isOpen = !this.isOpen;

    if (this.isOpen) {
      const rect = (event.target as HTMLElement).getBoundingClientRect();
      const viewportWidth = window.innerWidth;

      const popoverWidth = 220; // approximate popover width
      this.positionTop = rect.top + window.scrollY;

      if (rect.right + popoverWidth > viewportWidth) {
        // Not enough space on right ‚Üí open on LEFT
        this.positionLeft = rect.left + window.scrollX - popoverWidth - 12;
        this.arrowDirection = 'right';
      } else {
        // Enough space ‚Üí open on RIGHT
        this.positionLeft = rect.right + window.scrollX + 12;
        this.arrowDirection = 'left';
      }
    }
  }

  onOk() {
    this.formulaApplied.emit({ rowIndex: this.rowIndex, col: this.colKey, formula: this.formula });
    this.isOpen = false;
    this.formula = '';
  }

  onCancel() {
    this.isOpen = false;
    this.formula = '';
  }
}


---

fx-popover.component.html

<button mat-icon-button (click)="togglePopover($event)">
  fx
</button>

<div 
  class="fx-popover"
  *ngIf="isOpen"
  [ngStyle]="{ top: positionTop + 'px', left: positionLeft + 'px' }">

  <!-- arrow -->
  <div class="fx-arrow" [ngClass]="arrowDirection"></div>

  <mat-form-field appearance="outline" class="fx-input">
    <input matInput [(ngModel)]="formula" placeholder="Enter formula">
  </mat-form-field>

  <div class="fx-actions">
    <button mat-button color="primary" (click)="onOk()">OK</button>
    <button mat-button (click)="onCancel()">Cancel</button>
  </div>
</div>


---

fx-popover.component.scss

.fx-popover {
  position: absolute;
  width: 220px;
  padding: 12px;
  background: white;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 1000;

  .fx-input {
    width: 100%;
  }

  .fx-actions {
    display: flex;
    justify-content: flex-end;
    gap: 8px;
    margin-top: 8px;
  }
}

/* Arrow styles */
.fx-arrow {
  position: absolute;
  top: 12px;
  width: 0;
  height: 0;
}

.fx-arrow.left {
  left: -8px;
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-right: 8px solid white;
  filter: drop-shadow(-1px 0 1px rgba(0,0,0,0.2));
}

.fx-arrow.right {
  right: -8px;
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
  border-left: 8px solid white;
  filter: drop-shadow(1px 0 1px rgba(0,0,0,0.2));
}


---

‚úÖ Now Behavior

If clicked cell is near left edge ‚Üí popover opens right side with arrow pointing left.

If clicked cell is near right edge ‚Üí popover opens left side with arrow pointing right.

Popover strictly closes only on OK or Cancel.

Looks exactly like a popover belonging to that column.



---

Do you also want me to extend this so that the popover can open above/below the cell if there‚Äôs not enough vertical space (like Material CDK Overlay does)?

