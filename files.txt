it('should handle occupancy type change', fakeAsync(() => {
    // 1. Initialize component with required data
    component.ngOnInit();
    tick();
    fixture.detectChanges();

    // 2. Setup mock occupancy type response
    const mockTypes = [{
        value: 'type1',
        dependentValue: {
            occupancyTypeCode: 'code1',
            hazard: 'Low',
            equipmentBreakdown: 'High'
        }
    }];
    mockReToolService.getOccupancyType.and.returnValue(of(mockTypes));

    // 3. First select an occupancy group to populate rowValuesMap
    component.changeOccupancyGroup(0, '1');
    tick();

    // 4. Now handle type change
    component.changeOccupancyType(0, 'type1');
    tick();

    // 5. Verify results
    const row = component['getFormArray']().at(0) as FormGroup;
    expect(row.get('Hazard')?.value).toBe('Low');
    expect(row.get('EquipmentBreakdown')?.value).toBe('High');
    expect(row.get('Action')?.value).toBe(ActionEnum.IsModified);
    
    // Verify rowValuesMap was updated
    const rowValues = component.rowValuesMap.get(0);
    expect(rowValues.OccupancyType).toBe('type1');
    expect(rowValues.Hazard).toBe('Low');
}));
