 it('should open popup on cell click', () => {
        spyOn<any>(component, 'openDialog'); // Ensure correct method reference
        const event = new MouseEvent('click');
        const element = { value: 'TestValue' };
        
        component.openPopupOnCellClick(event, element, 'TestColumn');
        
        expect(component['openDialog']).toHaveBeenCalled();
      });
	  
	  GeneralPropertyComponent > should open popup on cell click
TypeError: Cannot read properties of undefined (reading 'split')



 it('should handle blur event correctly', () => {
        const event = { target: { value: '2.5' } } as any;
        component.handleBlur(event, 0);
        expect(event.target.value).toBe('2.5');
      });
    

GeneralPropertyComponent > should handle blur event correctly
TypeError: Cannot read properties of null (reading 'setValue')


it('should open dialog', () => {
        spyOn(matDialogMock, 'open');
      
        const mockGridRowRecord = {
          rowIndex: 1,
          columnName: 'TestColumn',
          value: 'TestValue'
        }; // Ensure all required properties are included
      
        component['openDialog'](mockGridRowRecord); // Call the private method safely
      
        expect(matDialogMock.open).toHaveBeenCalled();
      });
	  
	  
	   it('should open dialog', () => {
        spyOn(matDialogMock, 'open');
      
        const mockGridRowRecord = {
          rowIndex: 1,
          columnName: 'TestColumn',
          value: 'TestValue',
          rowPKId:2
        }; // Ensure all required properties are included
      
        component['openDialog'](mockGridRowRecord); // Call the private method safely
      
        expect(matDialogMock.open).toHaveBeenCalled();
      });
	  
	  error :GeneralPropertyComponent > should open dialog
Error: <spyOn> : open has already been spied upon
Usage: spyOn(<object>, <methodName>)


