it('should handle occupancy type change', fakeAsync(() => {
    // Initialize component with data from service
    component.ngOnInit();
    tick();
    fixture.detectChanges();

    // Mock occupancy type response
    const mockTypes = [{
        value: 'type1',
        dependentValue: {
            occupancyTypeCode: 'code1',
            hazard: 'Low',
            equipmentBreakdown: 'High'
        }
    }];
    mockReToolService.getOccupancyType.and.returnValue(of(mockTypes));

    // Get the form array reference
    const formArray = component['getFormArray']();
    
    // Simulate initial group selection to populate rowValuesMap
    component.changeOccupancyGroup(0, '1');
    tick();

    // Verify pre-conditions
    const row = formArray.at(0) as FormGroup;
    expect(row.get('OccupancyType').value).toBe(ReToolConstants.blank); // From changeOccupancyGroup

    // Execute type change
    component.changeOccupancyType(0, 'type1');
    tick();

    // Verify updates
    expect(row.get('Hazard').value).toBe('Low');
    expect(row.get('EquipmentBreakdown').value).toBe('High');
    expect(row.get('OccupancyCode').value).toBe('code1');
    expect(row.get('Action').value).toBe(ActionEnum.IsModified);

    // Verify rowValuesMap updates
    const rowValues = component.rowValuesMap.get(0);
    expect(rowValues.OccupancyType).toBe('type1');
    expect(rowValues.Hazard).toBe('Low');
}));
